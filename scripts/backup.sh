#!/bin/bash

# üóÑÔ∏è –ü–æ–ª–Ω—ã–π –±—ç–∫–∞–ø —Å–∞–π—Ç–∞ Naken Store
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø: –∫–æ–¥ + –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö + —Ñ–∞–π–ª—ã

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# ==================== –ù–ê–°–¢–†–û–ô–ö–ò ====================

# –û—Å–Ω–æ–≤–Ω—ã–µ –ø—É—Ç–∏
PROJECT_DIR="$(dirname "$(dirname "$(realpath "$0")")")"  # –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞
BACKUP_BASE_DIR="/backups"  # –û—Å–Ω–æ–≤–Ω–∞—è –ø–∞–ø–∫–∞ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
BACKUP_DIR="${BACKUP_BASE_DIR}/naken_backup_${TIMESTAMP}"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∏–∑ .env –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è)
DB_NAME="${DB_NAME:-naken_store}"
DB_USER="${DB_USER:-postgres}"
DB_HOST="${DB_HOST:-localhost}"
DB_PORT="${DB_PORT:-5432}"

# –§–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞
EXCLUDE_PATTERNS=(
    "node_modules"
    ".next"
    ".git"
    "*.log"
    "backups"
    "tmp"
    "temp"
)

# ==================== –§–£–ù–ö–¶–ò–ò ====================

log() {
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] $1"
}

error() {
    echo "[ERROR] $1" >&2
    exit 1
}

check_dependencies() {
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º PostgreSQL
    if ! command -v pg_dump &> /dev/null; then
        error "pg_dump –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –∫–ª–∏–µ–Ω—Ç."
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º tar
    if ! command -v tar &> /dev/null; then
        error "tar –Ω–µ –Ω–∞–π–¥–µ–Ω."
    fi
    
    log "‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–∞–π–¥–µ–Ω—ã"
}

create_backup_dirs() {
    log "–°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–∞..."
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –ø–∞–ø–∫—É –±—ç–∫–∞–ø–æ–≤
    sudo mkdir -p "$BACKUP_BASE_DIR"
    
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –±—ç–∫–∞–ø–∞
    mkdir -p "$BACKUP_DIR"
    mkdir -p "$BACKUP_DIR/database"
    mkdir -p "$BACKUP_DIR/files"
    mkdir -p "$BACKUP_DIR/code"
    
    log "‚úÖ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ —Å–æ–∑–¥–∞–Ω—ã: $BACKUP_DIR"
}

backup_database() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –°–æ–∑–¥–∞–µ–º –¥–∞–º–ø –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    local db_backup_file="$BACKUP_DIR/database/naken_${TIMESTAMP}.sql"
    
    # –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä–æ–ª—å –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è pg_dump
    export PGPASSWORD="$DB_PASSWORD"
    
    if pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" \
        --verbose \
        --no-owner \
        --no-privileges \
        --format=custom \
        --file="$db_backup_file.custom"; then
        
        # –¢–∞–∫–∂–µ —Å–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –≤–µ—Ä—Å–∏—é –¥–ª—è —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏
        pg_dump -h "$DB_HOST" -p "$DB_PORT" -U "$DB_USER" -d "$DB_NAME" \
            --no-owner \
            --no-privileges \
            --format=plain \
            --file="$db_backup_file"
            
        log "‚úÖ –ë—ç–∫–∞–ø –ë–î —Å–æ–∑–¥–∞–Ω: $(du -h "$db_backup_file" | cut -f1)"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    fi
    
    unset PGPASSWORD
}

backup_files() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø —Ñ–∞–π–ª–æ–≤..."
    
    # –ë—ç–∫–∞–ø–∏–º –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    if [ -d "$PROJECT_DIR/public/uploads" ]; then
        cp -r "$PROJECT_DIR/public/uploads" "$BACKUP_DIR/files/"
        log "‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        log "‚ö†Ô∏è  –ü–∞–ø–∫–∞ uploads –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ë—ç–∫–∞–ø–∏–º –º–µ–¥–∏–∞-—Ñ–∞–π–ª—ã
    if [ -d "$PROJECT_DIR/public/media" ]; then
        cp -r "$PROJECT_DIR/public/media" "$BACKUP_DIR/files/"
        log "‚úÖ –ú–µ–¥–∏–∞-—Ñ–∞–π–ª—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã"
    else
        log "‚ö†Ô∏è  –ü–∞–ø–∫–∞ media –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

backup_code() {
    log "–°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –∫–æ–¥–∞..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è tar
    local exclude_args=""
    for pattern in "${EXCLUDE_PATTERNS[@]}"; do
        exclude_args="$exclude_args --exclude=$pattern"
    done
    
    # –ö–æ–ø–∏—Ä—É–µ–º –≤–µ—Å—å –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞, –∏—Å–∫–ª—é—á–∞—è –Ω–µ–Ω—É–∂–Ω—ã–µ —Ñ–∞–π–ª—ã
    tar $exclude_args -cf "$BACKUP_DIR/code/project_code.tar" -C "$(dirname "$PROJECT_DIR")" "$(basename "$PROJECT_DIR")"
    
    # –¢–∞–∫–∂–µ –∫–æ–ø–∏—Ä—É–µ–º –≤–∞–∂–Ω—ã–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    if [ -f "$PROJECT_DIR/.env" ]; then
        cp "$PROJECT_DIR/.env" "$BACKUP_DIR/code/.env.backup"
        log "‚úÖ .env —Ñ–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    fi
    
    if [ -f "$PROJECT_DIR/ecosystem.config.js" ]; then
        cp "$PROJECT_DIR/ecosystem.config.js" "$BACKUP_DIR/code/"
        log "‚úÖ PM2 –∫–æ–Ω—Ñ–∏–≥ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω"
    fi
    
    log "‚úÖ –ö–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω"
}

create_info_file() {
    log "–°–æ–∑–¥–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª..."
    
    local info_file="$BACKUP_DIR/backup_info.txt"
    
    cat > "$info_file" << EOF
=== BACKUP INFO ===
–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è: $(date)
–í–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞: $(cd "$PROJECT_DIR" && git rev-parse HEAD 2>/dev/null || echo "N/A")
–í–µ—Ç–∫–∞ Git: $(cd "$PROJECT_DIR" && git branch --show-current 2>/dev/null || echo "N/A")
–°–µ—Ä–≤–µ—Ä: $(hostname)
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)
–†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: $(du -sh "$BACKUP_DIR" | cut -f1)

=== –°–¢–†–£–ö–¢–£–†–ê ===
$(tree "$BACKUP_DIR" 2>/dev/null || ls -la "$BACKUP_DIR")

=== –ù–ê–°–¢–†–û–ô–ö–ò –ë–î ===
Host: $DB_HOST
Port: $DB_PORT
Database: $DB_NAME
User: $DB_USER

=== –í–û–°–°–¢–ê–ù–û–í–õ–ï–ù–ò–ï ===
1. –†–∞—Å–ø–∞–∫–æ–≤–∞—Ç—å –∫–æ–¥: tar -xf code/project_code.tar
2. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: npm install
3. –í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ë–î: pg_restore -d –Ω–æ–≤–∞—è_–±–∞–∑–∞ database/naken_*.sql.custom
4. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Ñ–∞–π–ª—ã –∏–∑ files/ –≤ public/
5. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å .env –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–æ–µ–∫—Ç

EOF

    log "‚úÖ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω"
}

create_final_archive() {
    log "–°–æ–∑–¥–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤..."
    
    local archive_name="naken_full_backup_${TIMESTAMP}.tar.gz"
    local archive_path="${BACKUP_BASE_DIR}/${archive_name}"
    
    # –°–æ–∑–¥–∞–µ–º —Å–∂–∞—Ç—ã–π –∞—Ä—Ö–∏–≤
    tar -czf "$archive_path" -C "$BACKUP_BASE_DIR" "naken_backup_${TIMESTAMP}"
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
    rm -rf "$BACKUP_DIR"
    
    local archive_size=$(du -h "$archive_path" | cut -f1)
    log "‚úÖ –§–∏–Ω–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤ —Å–æ–∑–¥–∞–Ω: $archive_path ($archive_size)"
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    chmod 600 "$archive_path"
    
    return 0
}

cleanup_old_backups() {
    log "–û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π)..."
    
    # –£–¥–∞–ª—è–µ–º –∞—Ä—Ö–∏–≤—ã —Å—Ç–∞—Ä—à–µ 30 –¥–Ω–µ–π
    find "$BACKUP_BASE_DIR" -name "naken_full_backup_*.tar.gz" -type f -mtime +30 -delete 2>/dev/null || true
    
    log "‚úÖ –°—Ç–∞—Ä—ã–µ –±—ç–∫–∞–ø—ã –æ—á–∏—â–µ–Ω—ã"
}

# ==================== –û–°–ù–û–í–ù–ê–Ø –õ–û–ì–ò–ö–ê ====================

main() {
    log "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—ã–π –±—ç–∫–∞–ø Naken Store..."
    log "–ü—Ä–æ–µ–∫—Ç: $PROJECT_DIR"
    log "–ë—ç–∫–∞–ø: $BACKUP_DIR"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [[ ! -f "$PROJECT_DIR/package.json" ]]; then
        error "–ù–µ –Ω–∞–π–¥–µ–Ω package.json. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–∫—Ä–∏–ø—Ç –∑–∞–ø—É—â–µ–Ω –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞."
    fi
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º –≤—Å–µ —à–∞–≥–∏
    check_dependencies
    create_backup_dirs
    backup_database
    backup_files
    backup_code
    create_info_file
    create_final_archive
    cleanup_old_backups
    
    log "üéâ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω!"
    log "–ê—Ä—Ö–∏–≤: ${BACKUP_BASE_DIR}/naken_full_backup_${TIMESTAMP}.tar.gz"
    log "–î–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Å–º–æ—Ç—Ä–∏—Ç–µ backup_info.txt –≤–Ω—É—Ç—Ä–∏ –∞—Ä—Ö–∏–≤–∞"
}

# –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–∑–≤–∞–Ω –Ω–∞–ø—Ä—è–º—É—é
if [[ "${BASH_SOURCE[0]}" == "${0}" ]]; then
    main "$@"
fi 