const fs = require('fs');
const path = require('path');

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ sitemap —Ä–æ—É—Ç–∞ –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function createProperXMLSitemapRoute() {
  const routeContent = `import { NextRequest, NextResponse } from 'next/server'
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

export async function GET(request: NextRequest) {
  const baseUrl = 'https://naken.store'
  
  try {
    console.log('üó∫Ô∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é sitemap.xml...')
    
    // –ü–æ–ª—É—á–∞–µ–º —Ç–æ–≤–∞—Ä—ã
    const products = await prisma.product.findMany({
      where: {
        published: true,
        slug: {
          not: null,
        },
        NOT: {
          slug: ''
        }
      },
      select: {
        slug: true,
        updatedAt: true,
      },
      orderBy: {
        updatedAt: 'desc'
      }
    })
    
    console.log(\`üì¶ –ù–∞–π–¥–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è sitemap: \${products.length}\`)
    
    // –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    const staticPages = [
      { url: baseUrl, lastModified: new Date(), priority: '1.0', changeFreq: 'daily' },
      { url: \`\${baseUrl}/catalog\`, lastModified: new Date(), priority: '0.9', changeFreq: 'daily' },
      { url: \`\${baseUrl}/contacts\`, lastModified: new Date(), priority: '0.9', changeFreq: 'monthly' },
      { url: \`\${baseUrl}/delivery\`, lastModified: new Date(), priority: '0.8', changeFreq: 'monthly' },
      { url: \`\${baseUrl}/payment\`, lastModified: new Date(), priority: '0.8', changeFreq: 'monthly' },
      { url: \`\${baseUrl}/returns\`, lastModified: new Date(), priority: '0.8', changeFreq: 'monthly' },
      { url: \`\${baseUrl}/terms\`, lastModified: new Date(), priority: '0.6', changeFreq: 'yearly' },
      { url: \`\${baseUrl}/privacy\`, lastModified: new Date(), priority: '0.6', changeFreq: 'yearly' },
      { url: \`\${baseUrl}/offer\`, lastModified: new Date(), priority: '0.6', changeFreq: 'yearly' },
      { url: \`\${baseUrl}/intro\`, lastModified: new Date(), priority: '0.5', changeFreq: 'monthly' },
    ]

    // –ü–†–ê–í–ò–õ–¨–ù–ê–Ø –≥–µ–Ω–µ—Ä–∞—Ü–∏—è XML
    let xml = \`<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://www.sitemaps.org/schemas/sitemap/0.9
        http://www.sitemaps.org/schemas/sitemap/0.9/sitemap.xsd">
\`

    // –î–æ–±–∞–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò —Ç–µ–≥–∞–º–∏
    staticPages.forEach((page) => {
      xml += \`  <url>
    <loc>\${page.url}</loc>
    <lastmod>\${page.lastModified.toISOString()}</lastmod>
    <changefreq>\${page.changeFreq}</changefreq>
    <priority>\${page.priority}</priority>
  </url>
\`
    })

    // –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã —Å –ü–†–ê–í–ò–õ–¨–ù–´–ú–ò —Ç–µ–≥–∞–º–∏
    products.forEach((product) => {
      xml += \`  <url>
    <loc>\${baseUrl}/product/\${product.slug}</loc>
    <lastmod>\${product.updatedAt.toISOString()}</lastmod>
    <changefreq>weekly</changefreq>
    <priority>0.8</priority>
  </url>
\`
    })

    // –ó–∞–∫—Ä—ã–≤–∞–µ–º XML
    xml += \`</urlset>\`
    
    console.log(\`‚úÖ Sitemap —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: \${staticPages.length + products.length} URL\`)
    console.log(\`üìè –†–∞–∑–º–µ—Ä XML: \${xml.length} —Å–∏–º–≤–æ–ª–æ–≤\`)

    // –ö–†–ò–¢–ò–ß–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ headers –¥–ª—è XML
    return new NextResponse(xml, {
      status: 200,
      headers: {
        'Content-Type': 'application/xml; charset=utf-8',
        'Cache-Control': 'public, max-age=3600, s-maxage=3600', // 1 —á–∞—Å –∫—ç—à
        'X-Robots-Tag': 'noindex',
        'Access-Control-Allow-Origin': '*',
      }
    })
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ sitemap:', error)
    
    // Fallback XML sitemap
    const fallbackXml = \`<?xml version="1.0" encoding="UTF-8"?>
<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
  <url>
    <loc>\${baseUrl}</loc>
    <lastmod>\${new Date().toISOString()}</lastmod>
    <changefreq>daily</changefreq>
    <priority>1.0</priority>
  </url>
  <url>
    <loc>\${baseUrl}/catalog</loc>
    <lastmod>\${new Date().toISOString()}</lastmod>
    <changefreq>daily</changefreq>
    <priority>0.9</priority>
  </url>
</urlset>\`
    
    return new NextResponse(fallbackXml, {
      status: 200,
      headers: {
        'Content-Type': 'application/xml; charset=utf-8',
        'Cache-Control': 'no-cache',
      }
    })
  } finally {
    await prisma.$disconnect()
  }
}

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è robots.txt (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
export async function generateRobotsTxt() {
  return \`User-agent: *
Allow: /

# Sitemaps
Sitemap: https://naken.store/sitemap.xml

# –Ø–Ω–¥–µ–∫—Å —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã  
User-agent: Yandex
Allow: /

# –ë–ª–æ–∫–∏—Ä—É–µ–º –∞–¥–º–∏–Ω–∫—É –∏ API
Disallow: /admin/
Disallow: /api/
Disallow: /auth/
Disallow: /_next/
Disallow: /scripts/

# –†–∞–∑—Ä–µ—à–∞–µ–º –≤–∞–∂–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è SEO
Allow: /catalog
Allow: /product/
Allow: /contacts
Allow: /delivery

# –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–æ–≤–∏–∫–æ–≤
Host: https://naken.store
Clean-param: utm_source&utm_medium&utm_campaign&fbclid&gclid
\`
}
`;

  return routeContent;
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è
async function fixXMLFormat() {
  console.log('üîß –ò—Å–ø—Ä–∞–≤–ª—è—é XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ sitemap...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π —Ä–æ—É—Ç —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º XML
    const newRouteContent = createProperXMLSitemapRoute();
    const routePath = path.join(process.cwd(), 'src', 'app', 'sitemap.xml', 'route.ts');
    
    // –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø
    const backupPath = routePath + '.xml-backup';
    if (fs.existsSync(routePath)) {
      fs.copyFileSync(routePath, backupPath);
      console.log(`üíæ –°–æ–∑–¥–∞–Ω –±—ç–∫–∞–ø: ${backupPath}`);
    }
    
    // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Ä–æ—É—Ç
    fs.writeFileSync(routePath, newRouteContent, 'utf8');
    console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ñ–∞–π–ª: ${routePath}`);
    
    console.log('\nüéâ XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    console.log('üìã –ò–∑–º–µ–Ω–µ–Ω–∏—è:');
    console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ XML —Ç–µ–≥–∏ <url>, <loc>, <lastmod>');
    console.log('   ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π Content-Type: application/xml');
    console.log('   ‚úÖ –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∫—ç—à –¥–æ 1 —á–∞—Å–∞');
    console.log('   ‚úÖ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –Ø–Ω–¥–µ–∫—Å –∏ Google');
    
    console.log('\nüìã –ß—Ç–æ –¥–µ–ª–∞—Ç—å –¥–∞–ª—å—à–µ:');
    console.log('   1. pm2 restart naken-store');
    console.log('   2. curl https://naken.store/sitemap.xml | head -10');
    console.log('   3. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å XML —Ç–µ–≥–∏ –≤ –±—Ä–∞—É–∑–µ—Ä–µ');
    console.log('   4. –î–æ–±–∞–≤–∏—Ç—å –≤ –Ø–Ω–¥–µ–∫—Å.–í–µ–±–º–∞—Å—Ç–µ—Ä –∏ Google Search Console');
    
    return true;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è XML:', error);
    return false;
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ sitemap
async function checkCurrentSitemap() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä—è—é —Ç–µ–∫—É—â–∏–π sitemap...');
  
  try {
    const routePath = path.join(process.cwd(), 'src', 'app', 'sitemap.xml', 'route.ts');
    
    if (!fs.existsSync(routePath)) {
      console.log('‚ùå –§–∞–π–ª sitemap —Ä–æ—É—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω!');
      return false;
    }
    
    const content = fs.readFileSync(routePath, 'utf8');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    const hasXMLDeclaration = content.includes('<?xml version="1.0"');
    const hasURLTags = content.includes('<url>') && content.includes('</url>');
    const hasLocTags = content.includes('<loc>') && content.includes('</loc>');
    const hasProperHeaders = content.includes('application/xml');
    
    console.log('üìä –ê–Ω–∞–ª–∏–∑ —Ç–µ–∫—É—â–µ–≥–æ sitemap:');
    console.log(`   ${hasXMLDeclaration ? '‚úÖ' : '‚ùå'} XML –¥–µ–∫–ª–∞—Ä–∞—Ü–∏—è`);
    console.log(`   ${hasURLTags ? '‚úÖ' : '‚ùå'} URL —Ç–µ–≥–∏`);
    console.log(`   ${hasLocTags ? '‚úÖ' : '‚ùå'} LOC —Ç–µ–≥–∏`);
    console.log(`   ${hasProperHeaders ? '‚úÖ' : '‚ùå'} XML Content-Type`);
    
    const needsFix = !hasXMLDeclaration || !hasURLTags || !hasLocTags || !hasProperHeaders;
    
    if (needsFix) {
      console.log('\n‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç—Å—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
    } else {
      console.log('\n‚úÖ Sitemap –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
    }
    
    return !needsFix;
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ sitemap:', error);
    return false;
  }
}

// CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
async function main() {
  const command = process.argv[2];
  
  switch (command) {
    case 'check':
      await checkCurrentSitemap();
      break;
      
    case 'fix':
      await fixXMLFormat();
      break;
      
    case 'full':
      console.log('üîß –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è...\n');
      await checkCurrentSitemap();
      console.log('\n' + '='.repeat(50) + '\n');
      await fixXMLFormat();
      break;
      
    default:
      console.log(`
üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è sitemap

–ü—Ä–æ–±–ª–µ–º–∞:
  ‚ùå –Ø–Ω–¥–µ–∫—Å –≤–∏–¥–∏—Ç –ø–ª–æ—Å–∫–∏–π —Ç–µ–∫—Å—Ç –≤–º–µ—Å—Ç–æ XML
  ‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ç–µ–≥–∏ <url>, <loc>, <lastmod>
  ‚ùå –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π Content-Type

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  node scripts/fix-sitemap-xml-format.js check  - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ç–µ–∫—É—â–∏–π sitemap
  node scripts/fix-sitemap-xml-format.js fix    - –ò—Å–ø—Ä–∞–≤–∏—Ç—å XML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
  node scripts/fix-sitemap-xml-format.js full   - –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ

–ü—Ä–∏–º–µ—Ä—ã:
  node scripts/fix-sitemap-xml-format.js full
  pm2 restart naken-store
  curl https://naken.store/sitemap.xml | head -10

–ü–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å —É–≤–∏–¥–∏—Ç:
  <?xml version="1.0" encoding="UTF-8"?>
  <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
    <url>
      <loc>https://naken.store</loc>
      <lastmod>2025-06-30T21:22:29.696Z</lastmod>
      ...
      `);
  }
}

if (require.main === module) {
  main().catch(console.error);
}

module.exports = { fixXMLFormat, checkCurrentSitemap, createProperXMLSitemapRoute }; 