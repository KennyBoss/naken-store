import { NextRequest, NextResponse } from 'next/server'
import { writeFile, mkdir } from 'fs/promises'
import { join } from 'path'
import { existsSync } from 'fs'

// üö® –≠–ö–°–¢–†–ï–ù–ù–û–ï –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –£–±–∏—Ä–∞–µ–º sharp –∏ —Å–ª–æ–∂–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É
// import { 
//   rateLimit, 
//   addSecurityHeaders, 
//   validateFile,
//   logSuspiciousActivity,
//   getClientIP 
// } from '@/lib/security'

// –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–∞–π–ª–æ–≤ –±–µ–∑ –≤–Ω–µ—à–Ω–∏—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
function validateFile(file: File): { isValid: boolean; errors: string[] } {
  const errors: string[] = []
  const maxSize = 15 * 1024 * 1024 // 15MB
  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'image/webp']
  
  if (!allowedTypes.includes(file.type)) {
    errors.push('–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞')
  }
  
  if (file.size > maxSize) {
    errors.push('–§–∞–π–ª —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π (–º–∞–∫—Å–∏–º—É–º 15MB)')
  }
  
  return {
    isValid: errors.length === 0,
    errors
  }
}

// –ü—Ä–æ—Å—Ç—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
function addSecurityHeaders(response: NextResponse): NextResponse {
  response.headers.set('X-Content-Type-Options', 'nosniff')
  response.headers.set('X-Frame-Options', 'DENY')
  return response
}

export async function POST(request: NextRequest) {
  try {
    console.log('üîß –≠–ö–°–¢–†–ï–ù–ù–´–ô UPLOAD API - –±–µ–∑ sharp –æ–±—Ä–∞–±–æ—Ç–∫–∏')
    
    const data = await request.formData()
    const file: File | null = data.get('file') as unknown as File

    if (!file) {
      return addSecurityHeaders(
        NextResponse.json({ error: '–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω' }, { status: 400 })
      )
    }

    console.log('üìÅ –ü–æ–ª—É—á–µ–Ω —Ñ–∞–π–ª:', { name: file.name, type: file.type, size: file.size })

    // –ü—Ä–æ—Å—Ç–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è
    const fileValidation = validateFile(file)
    if (!fileValidation.isValid) {
      return addSecurityHeaders(
        NextResponse.json({ 
          error: '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–π —Ñ–∞–π–ª',
          details: fileValidation.errors
        }, { status: 400 })
      )
    }

    const bytes = await file.arrayBuffer()
    const buffer = Buffer.from(bytes)

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø—Ä–æ—Å—Ç–æ–µ –∏–º—è —Ñ–∞–π–ª–∞
    const timestamp = Date.now()
    const randomString = Math.random().toString(36).substring(2, 15)
    const fileExtension = file.name.split('.').pop() || 'jpg'
    const fileName = `${timestamp}-${randomString}.${fileExtension}`

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    let uploadsRoot: string
    
    if (process.env.NODE_ENV === 'production') {
      uploadsRoot = process.env.UPLOADS_PATH || join(process.cwd(), 'public', 'uploads')
    } else {
      uploadsRoot = join(process.cwd(), 'public', 'uploads')
    }

    const uploadsDir = uploadsRoot
    const thumbnailsDir = join(uploadsDir, 'thumbnails')
    
    console.log('üìÇ –ü—É—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', uploadsDir)
    
    // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    try {
      if (!existsSync(uploadsDir)) {
        console.log(`üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${uploadsDir}`)
        await mkdir(uploadsDir, { recursive: true })
      }
      if (!existsSync(thumbnailsDir)) {
        console.log(`üìÅ –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é: ${thumbnailsDir}`)
        await mkdir(thumbnailsDir, { recursive: true })
      }
    } catch (dirError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:', dirError)
      return addSecurityHeaders(
        NextResponse.json({ 
          error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏' 
        }, { status: 500 })
      )
    }

    const filePath = join(uploadsDir, fileName)
    
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –ë–ï–ó –û–ë–†–ê–ë–û–¢–ö–ò
    try {
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª:', filePath)
      await writeFile(filePath, buffer)
      console.log('‚úÖ –§–∞–π–ª —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω')
    } catch (writeError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞:', writeError)
      return addSecurityHeaders(
        NextResponse.json({ 
          error: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞.' 
        }, { status: 500 })
      )
    }

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const fileUrl = `/uploads/${fileName}`
    
    console.log('üéâ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ:', fileUrl)
    
    return addSecurityHeaders(
      NextResponse.json({ 
        success: true, 
        url: fileUrl,
        fileName: fileName,
        originalName: file.name,
        metadata: {
          originalSize: file.size,
          processedSize: buffer.length
        }
      })
    )

  } catch (error) {
    console.error('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:', error)
    
    return addSecurityHeaders(
      NextResponse.json({ 
        error: `–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞: ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`
      }, { status: 500 })
    )
  }
} 