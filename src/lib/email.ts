import nodemailer from 'nodemailer'
import { createEmailCode, verifyEmailCodeDB } from '@/lib/auth-db'

// –°–æ–∑–¥–∞–Ω–∏–µ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
const createTransporter = () => {
  const emailService = process.env.EMAIL_SERVICE || 'gmail'
  const emailUser = process.env.EMAIL_USER
  const emailPassword = process.env.EMAIL_PASSWORD
  
  if (!emailUser || !emailPassword) {
    throw new Error('EMAIL_USER –∏ EMAIL_PASSWORD –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã –≤ .env')
  }

  return nodemailer.createTransport({
    service: emailService,
    auth: {
      user: emailUser,
      pass: emailPassword
    }
  })
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–¥–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞ email
export const sendEmailCode = async (email: string): Promise<string> => {
  // –°–æ–∑–¥–∞–µ–º –∫–æ–¥ –≤ –ë–î
  const code = await createEmailCode(email)

  // –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ email, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏
  const emailUser = process.env.EMAIL_USER
  const emailPassword = process.env.EMAIL_PASSWORD
  
  if (!emailUser || !emailPassword) {
    console.log(`\nüìß EMAIL –ö–û–î –î–õ–Ø ${email}: ${code}\n`)
    console.log('‚ö†Ô∏è  –î–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞ –¥–æ–±–∞–≤—å—Ç–µ EMAIL_USER –∏ EMAIL_PASSWORD –≤ .env')
    return code
  }

  try {
    const transporter = createTransporter()
    
    const mailOptions = {
      from: `"Naken Store" <${emailUser}>`,
      to: email,
      subject: '–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–ª—è –≤—Ö–æ–¥–∞',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
              line-height: 1.6; 
              color: #374151; 
              background-color: #ffffff;
              padding: 20px;
            }
            .container { 
              max-width: 600px; 
              margin: 0 auto; 
              background: white; 
              border-radius: 24px; 
              overflow: hidden;
              box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            }
            .header { 
              background: linear-gradient(135deg, #14b8a6, #0891b2); 
              color: white; 
              padding: 40px 30px; 
              text-align: center; 
            }
            .header h1 { 
              font-size: 36px; 
              font-weight: 300; 
              margin: 0; 
              letter-spacing: 3px;
            }
            .content { 
              padding: 40px 30px; 
            }
            .greeting {
              font-size: 20px;
              color: #1f2937;
              margin-bottom: 16px;
              font-weight: 500;
            }
            .description {
              color: #6b7280;
              font-size: 16px;
              line-height: 1.6;
              margin-bottom: 32px;
              font-weight: 300;
            }
            .code-container {
              background: linear-gradient(135deg, #f0fdfa, #ccfbf1);
              border: 3px solid #14b8a6;
              border-radius: 20px;
              padding: 32px;
              text-align: center;
              margin: 32px 0;
              box-shadow: 0 8px 20px rgba(20, 184, 166, 0.2);
            }
            .code {
              font-size: 48px;
              font-weight: 600;
              color: #0d9488;
              letter-spacing: 6px;
              font-family: 'Courier New', monospace;
              text-shadow: 0 2px 4px rgba(13, 148, 136, 0.3);
            }
            .code-title {
              font-size: 18px;
              color: #0f766e;
              font-weight: 500;
              margin-bottom: 16px;
              text-transform: uppercase;
              letter-spacing: 1px;
            }
            .info-box {
              background: #f8fafc;
              border-radius: 16px;
              padding: 24px;
              margin: 32px 0;
              border-left: 4px solid #14b8a6;
            }
            .info-box p {
              color: #6b7280;
              font-size: 14px;
              line-height: 1.6;
              margin: 8px 0;
              font-weight: 300;
            }
            .security-note {
              background: linear-gradient(135deg, #fef3c7, #fde68a);
              border: 2px solid #f59e0b;
              border-radius: 16px;
              padding: 20px;
              margin: 24px 0;
              text-align: center;
              box-shadow: 0 4px 12px rgba(245, 158, 11, 0.2);
            }
            .security-note p {
              color: #92400e;
              font-size: 14px;
              font-weight: 400;
              margin: 0;
            }
            .footer { 
              background: #1f2937; 
              color: white; 
              padding: 30px; 
              text-align: center;
              font-weight: 300;
            }
            .footer p {
              margin: 4px 0;
              opacity: 0.9;
            }
            .footer .copyright {
              font-size: 12px;
              opacity: 0.7;
              margin-top: 16px;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>NAKEN</h1>
            </div>
            
            <div class="content">
              <div class="greeting">–ö–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è</div>
              
              <p class="description">
                –î–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Ö–æ–¥–∞ –≤ –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –≤–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –∫–æ–¥ –Ω–∞ —Å–∞–π—Ç–µ:
              </p>
              
              <div class="code-container">
                <div class="code-title">–í–∞—à –∫–æ–¥</div>
                <div class="code">${code}</div>
              </div>
              
              <div class="info-box">
                <p><strong>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</strong></p>
                <p>‚Ä¢ –ö–æ–¥ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –≤ —Ç–µ—á–µ–Ω–∏–µ 15 –º–∏–Ω—É—Ç</p>
                <p>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ–≥–æ —Ç–æ–ª—å–∫–æ –Ω–∞ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º —Å–∞–π—Ç–µ naken.store</p>
                <p>‚Ä¢ –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ –∫–æ–¥ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º</p>
              </div>
              
              <div class="security-note">
                <p>üîí –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ —ç—Ç–æ—Ç –∫–æ–¥, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.</p>
              </div>
            </div>
            
            <div class="footer">
              <p>NAKEN Store</p>
              <p>naken.store</p>
              <p>–ü–æ–¥–¥–µ—Ä–∂–∫–∞: +7 (920) 994-07-07</p>
              <p class="copyright">¬© 2024 Naken Store. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
            </div>
          </div>
        </body>
        </html>
      `
    }

    await transporter.sendMail(mailOptions)
    console.log(`‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ ${email}`)
    return code
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error)
    // –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–æ–¥ –≤ –∫–æ–Ω—Å–æ–ª–∏
    console.log(`\nüìß EMAIL –ö–û–î –î–õ–Ø ${email}: ${code} (fallback)\n`)
    return code
  }
}

// –ü—Ä–æ–≤–µ—Ä–∫–∞ email –∫–æ–¥–∞
export const verifyEmailCode = async (email: string, code: string): Promise<boolean> => {
  return await verifyEmailCodeDB(email, code)
}

// –û–±—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ email
export const sendEmail = async (to: string, subject: string, html: string): Promise<void> => {
  const emailUser = process.env.EMAIL_USER
  if (!emailUser) return

  try {
    const transporter = createTransporter()
    
    const mailOptions = {
      from: `"Naken Store" <${emailUser}>`,
      to,
      subject,
      html
    }

    await transporter.sendMail(mailOptions)
    console.log(`‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ ${to}`)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email:', error)
  }
}

// –û—Ç–ø—Ä–∞–≤–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email
export const sendWelcomeEmail = async (email: string, name?: string): Promise<void> => {
  const emailUser = process.env.EMAIL_USER
  if (!emailUser) return

  try {
    const transporter = createTransporter()
    
    const mailOptions = {
      from: `"Naken Store" <${emailUser}>`,
      to: email,
      subject: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Naken Store!',
      html: `
        <!DOCTYPE html>
        <html>
        <head>
          <meta charset="utf-8">
          <meta name="viewport" content="width=device-width, initial-scale=1.0">
          <style>
            * { margin: 0; padding: 0; box-sizing: border-box; }
            body { 
              font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; 
              line-height: 1.6; 
              color: #374151; 
              background-color: #ffffff;
              padding: 20px;
            }
            .container { 
              max-width: 600px; 
              margin: 0 auto; 
              background: white; 
              border-radius: 24px; 
              overflow: hidden;
              box-shadow: 0 10px 25px rgba(0,0,0,0.1);
            }
            .header { 
              background: linear-gradient(135deg, #14b8a6, #0891b2); 
              color: white; 
              padding: 40px 30px; 
              text-align: center; 
            }
            .header h1 { 
              font-size: 36px; 
              font-weight: 300; 
              margin-bottom: 12px; 
              letter-spacing: 3px;
            }
            .header p {
              font-size: 20px;
              font-weight: 300;
              opacity: 0.9;
            }
            .content { 
              padding: 40px 30px; 
            }
            .welcome-message {
              text-align: center;
              margin-bottom: 32px;
            }
            .welcome-message h2 {
              color: #1f2937;
              font-size: 28px;
              font-weight: 500;
              margin-bottom: 16px;
            }
            .welcome-message p {
              color: #6b7280;
              font-size: 16px;
              line-height: 1.6;
              font-weight: 300;
            }
            .features-grid {
              display: grid;
              grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
              gap: 20px;
              margin: 32px 0;
            }
            .feature-card {
              background: linear-gradient(135deg, #f0fdfa, #ccfbf1);
              border-radius: 16px;
              padding: 24px;
              text-align: center;
              border: 1px solid #5eead4;
              box-shadow: 0 4px 12px rgba(20, 184, 166, 0.1);
            }
            .feature-card .icon {
              font-size: 32px;
              margin-bottom: 12px;
            }
            .feature-card h3 {
              color: #0f766e;
              font-size: 16px;
              font-weight: 500;
              margin-bottom: 8px;
            }
            .feature-card p {
              color: #134e4a;
              font-size: 14px;
              font-weight: 300;
              line-height: 1.4;
            }
            .cta-section {
              background: #f8fafc;
              border-radius: 20px;
              padding: 32px;
              text-align: center;
              margin: 32px 0;
            }
            .cta-button {
              display: inline-block;
              background: linear-gradient(135deg, #14b8a6, #0891b2);
              color: white;
              padding: 16px 32px;
              text-decoration: none;
              border-radius: 12px;
              font-weight: 500;
              font-size: 18px;
              margin: 16px 0;
              box-shadow: 0 4px 12px rgba(20, 184, 166, 0.3);
              transition: all 0.3s ease;
            }
            .contact-info {
              background: linear-gradient(135deg, #fef3c7, #fde68a);
              border-radius: 16px;
              padding: 20px;
              margin: 24px 0;
              text-align: center;
              border: 2px solid #f59e0b;
              box-shadow: 0 4px 12px rgba(245, 158, 11, 0.2);
            }
            .contact-info h4 {
              color: #92400e;
              font-size: 16px;
              font-weight: 500;
              margin-bottom: 8px;
            }
            .contact-info p {
              color: #78350f;
              font-size: 14px;
              font-weight: 400;
              margin: 4px 0;
            }
            .footer { 
              background: #1f2937; 
              color: white; 
              padding: 30px; 
              text-align: center;
              font-weight: 300;
            }
            .footer p {
              margin: 4px 0;
              opacity: 0.9;
            }
            .footer .copyright {
              font-size: 12px;
              opacity: 0.7;
              margin-top: 16px;
            }
          </style>
        </head>
        <body>
          <div class="container">
            <div class="header">
              <h1>NAKEN</h1>
              <p>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!</p>
            </div>
            
            <div class="content">
              <div class="welcome-message">
                <h2>–ü—Ä–∏–≤–µ—Ç${name ? `, ${name}` : ''}! üëã</h2>
                <p>–°–ø–∞—Å–∏–±–æ –∑–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ Naken Store! –ú—ã —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –≤ –Ω–∞—à–µ–º —Å–æ–æ–±—â–µ—Å—Ç–≤–µ –º–æ–¥–Ω—ã—Ö –ª—é–¥–µ–π.</p>
              </div>
              
              <div class="features-grid">
                <div class="feature-card">
                  <div class="icon">üõçÔ∏è</div>
                  <h3>–ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤</h3>
                  <p>–ò–∑—É—á–∞–π—Ç–µ –Ω–∞—à–∏ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ –æ–¥–µ–∂–¥—ã</p>
                </div>
                
                <div class="feature-card">
                  <div class="icon">‚ù§Ô∏è</div>
                  <h3>–ò–∑–±—Ä–∞–Ω–Ω–æ–µ</h3>
                  <p>–°–æ—Ö—Ä–∞–Ω—è–π—Ç–µ –ø–æ–Ω—Ä–∞–≤–∏–≤—à–∏–µ—Å—è —Ç–æ–≤–∞—Ä—ã –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ</p>
                </div>
                
                <div class="feature-card">
                  <div class="icon">üöÄ</div>
                  <h3>–ë—ã—Å—Ç—Ä—ã–µ –∑–∞–∫–∞–∑—ã</h3>
                  <p>–û—Ñ–æ—Ä–º–ª—è–π—Ç–µ –ø–æ–∫—É–ø–∫–∏ –±—ã—Å—Ç—Ä–æ –∏ —É–¥–æ–±–Ω–æ</p>
                </div>
                
                <div class="feature-card">
                  <div class="icon">üì¶</div>
                  <h3>–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ</h3>
                  <p>–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å—Ç–∞—Ç—É—Å–æ–º –≤–∞—à–∏—Ö –∑–∞–∫–∞–∑–æ–≤</p>
                </div>
              </div>
              
              <div class="cta-section">
                <h3 style="color: #1f2937; font-size: 20px; font-weight: 500; margin-bottom: 16px;">
                  –ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –ø–æ–∫—É–ø–∫–∏?
                </h3>
                <p style="color: #6b7280; font-weight: 300; margin-bottom: 24px;">
                  –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä —Å—Ç–∏–ª—å–Ω–æ–π –æ–¥–µ–∂–¥—ã –≤ –Ω–∞—à–µ–º –∫–∞—Ç–∞–ª–æ–≥–µ
                </p>
                <a href="${process.env.NEXTAUTH_URL || 'https://naken.store'}" class="cta-button">
                  –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥
                </a>
              </div>
              
              <div class="contact-info">
                <h4>üéØ –≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è</h4>
                <p>–°–∫–∏–¥–∫–∏ –¥–æ 50% –¥–ª—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π</p>
                <p>–ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 3000‚ÇΩ</p>
              </div>
            </div>
            
            <div class="footer">
              <p>NAKEN Store</p>
              <p>naken.store</p>
              <p>–ü–æ–¥–¥–µ—Ä–∂–∫–∞: +7 (920) 994-07-07</p>
              <p>Email: support@naken.store</p>
              <p class="copyright">¬© 2024 Naken Store. –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã.</p>
            </div>
          </div>
        </body>
        </html>
      `
    }

    await transporter.sendMail(mailOptions)
    console.log(`‚úÖ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ ${email}`)
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ email:', error)
  }
} 