'use client'

import { useState } from 'react'
import Image from 'next/image'

interface SafeImageProps {
  src: string
  alt: string
  fill?: boolean
  sizes?: string
  quality?: number
  priority?: boolean
  className?: string
  width?: number
  height?: number
  style?: React.CSSProperties
}

export default function SafeImage({
  src,
  alt,
  fill,
  sizes,
  quality = 85,
  priority = false,
  className,
  width,
  height,
  style
}: SafeImageProps) {
  const [useNativeImg, setUseNativeImg] = useState(false)
  const [isLoading, setIsLoading] = useState(true)

  // –ò–°–ü–†–ê–í–õ–ï–ù–û: –æ—Å—Ç–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –ø—É—Ç–∏ –∫–∞–∫ –µ—Å—Ç—å –¥–ª—è nginx
  const getImageSrc = (originalSrc: string) => {
    if (!originalSrc) return '/placeholder.jpg'
    
    // üêõ –î–ï–ë–ê–ì: –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç
    console.log('üîÑ SafeImage –ø–æ–ª—É—á–∏–ª –ø—É—Ç—å:', originalSrc)
    
    // –û—Å—Ç–∞–≤–ª—è–µ–º –ø—É—Ç–∏ –∫–∞–∫ –µ—Å—Ç—å - nginx –¥–æ–ª–∂–µ–Ω –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å /uploads/ —Å—Ç–∞—Ç–∏—á–Ω–æ
    return originalSrc
  }

  const imageSrc = getImageSrc(src)

  // –ï—Å–ª–∏ src –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å http/https –∏–ª–∏ —ç—Ç–æ base64, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π img
  const isExternalUrl = imageSrc?.startsWith('http://') || imageSrc?.startsWith('https://') || imageSrc?.startsWith('data:')
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
  const handleError = () => {
    setUseNativeImg(true)
    setIsLoading(false)
  }

  const handleLoad = () => {
    setIsLoading(false)
  }

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π img –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö URL –∏–ª–∏ –µ—Å–ª–∏ Next Image –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª
  if (useNativeImg || isExternalUrl) {
    return (
      <img
        src={imageSrc || '/placeholder.jpg'}
        alt={alt}
        className={className}
        style={style}
        onError={(e) => {
          const target = e.target as HTMLImageElement
          target.src = '/placeholder.jpg'
        }}
      />
    )
  }

  // –ü—Ä–æ–±—É–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Next.js Image
  if (fill) {
    return (
      <>
        {isLoading && (
          <div className="absolute inset-0 bg-gray-100 animate-pulse" />
        )}
        <Image
          src={imageSrc || '/placeholder.jpg'}
          alt={alt}
          fill
          sizes={sizes}
          quality={quality}
          priority={priority}
          className={className}
          style={style}
          onError={handleError}
          onLoad={handleLoad}
        />
      </>
    )
  }

  // –î–ª—è —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞–∑–º–µ—Ä–æ–≤
  if (width && height) {
    return (
      <>
        {isLoading && (
          <div 
            className="bg-gray-100 animate-pulse" 
            style={{ width, height }}
          />
        )}
        <Image
          src={imageSrc || '/placeholder.jpg'}
          alt={alt}
          width={width}
          height={height}
          quality={quality}
          priority={priority}
          className={className}
          style={style}
          onError={handleError}
          onLoad={handleLoad}
        />
      </>
    )
  }

  // –ï—Å–ª–∏ –Ω–µ—Ç —Ä–∞–∑–º–µ—Ä–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—ã—á–Ω—ã–π img
  return (
    <img
      src={imageSrc || '/placeholder.jpg'}
      alt={alt}
      className={className}
      style={style}
      onError={(e) => {
        const target = e.target as HTMLImageElement
        target.src = '/placeholder.jpg'
      }}
    />
  )
} 