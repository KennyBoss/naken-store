import { withAuth } from 'next-auth/middleware'
import { NextResponse } from 'next/server'
import { addSecurityHeaders, rateLimit, logSuspiciousActivity, getClientIP } from '@/lib/security'

// Global rate limiting: 1000 –∑–∞–ø—Ä–æ—Å–æ–≤ –≤ –º–∏–Ω—É—Ç—É –Ω–∞ IP (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
const globalRateLimit = rateLimit({
  maxRequests: 1000,
  windowMs: 60 * 1000,
})

export default withAuth(
  function middleware(req) {
    const { token } = req.nextauth
    const { pathname } = req.nextUrl

    // –î–µ–±–∞–≥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∞–¥–º–∏–Ω—Å–∫–∏—Ö –º–∞—Ä—à—Ä—É—Ç–æ–≤
    if (pathname.startsWith('/admin') && pathname !== '/admin-login') {
      console.log('üîç Middleware –ø—Ä–æ–≤–µ—Ä–∫–∞ admin –º–∞—Ä—à—Ä—É—Ç–∞:', {
        path: pathname,
        hasToken: !!token,
        tokenRole: token?.role,
        tokenSub: token?.sub,
        timestamp: new Date().toISOString()
      })
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–π rate limiting
    const rateLimitResult = globalRateLimit(req)
    if (!rateLimitResult.success) {
      logSuspiciousActivity('rate_limit', {
        ip: getClientIP(req),
        userAgent: req.headers.get('user-agent') || undefined,
        path: pathname
      })
      
      return addSecurityHeaders(
        NextResponse.json(
          { error: '–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤' },
          { status: 429 }
        )
      )
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–¥–º–∏–Ω—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã (–∏—Å–∫–ª—é—á–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü—É –ª–æ–≥–∏–Ω–∞ –∞–¥–º–∏–Ω–∞)
    if (pathname.startsWith('/admin') && pathname !== '/admin-login') {
      if (!token?.role || token.role !== 'ADMIN') {
        console.log('‚ùå –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ –∑–∞–ø—Ä–µ—â–µ–Ω:', {
          path: pathname,
          hasToken: !!token,
          tokenRole: token?.role,
          reason: !token ? 'no_token' : !token.role ? 'no_role' : token.role !== 'ADMIN' ? 'wrong_role' : 'unknown'
        })
        
        logSuspiciousActivity('unauthorized_access', {
          ip: getClientIP(req),
          userAgent: req.headers.get('user-agent') || undefined,
          path: pathname,
          userId: token?.sub
        })
        // –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–¥–º–∏–Ω-–ª–æ–≥–∏–Ω, –∞ –Ω–µ –Ω–∞ –æ–±—ã—á–Ω—ã–π –≤—Ö–æ–¥
        return NextResponse.redirect(new URL('/admin-login?error=AccessDenied', req.url))
      }
      
      console.log('‚úÖ –î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω:', {
        path: pathname,
        role: token.role,
        userId: token.sub
      })
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ñ–∏–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
    if (pathname.startsWith('/profile')) {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è:', {
        path: pathname,
        hasToken: !!token,
        tokenSub: token?.sub,
        tokenRole: token?.role
      })
      if (!token) {
        console.log('‚ùå –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥ –∏–∑ –ø—Ä–æ—Ñ–∏–ª—è:', pathname)
        return NextResponse.redirect(new URL('/auth/signin?callbackUrl=' + encodeURIComponent(pathname), req.url))
      }
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º checkout (—Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏)
    if (pathname.startsWith('/checkout')) {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ checkout:', {
        path: pathname,
        hasToken: !!token,
        tokenSub: token?.sub,
        tokenRole: token?.role
      })
      if (!token) {
        console.log('‚ùå –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ö–æ–¥ –∏–∑ checkout:', pathname)
        return NextResponse.redirect(new URL('/auth/signin?callbackUrl=/checkout', req.url))
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞—â–∏—Ç–Ω—ã–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∫–æ –≤—Å–µ–º –æ—Ç–≤–µ—Ç–∞–º
    const response = NextResponse.next()
    return addSecurityHeaders(response)
  },
  {
    callbacks: {
      authorized: ({ token, req }) => {
        const { pathname } = req.nextUrl
        
        // –î–µ–±–∞–≥ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (pathname.startsWith('/admin')) {
          console.log('üîç Middleware authorized callback:', {
            path: pathname,
            hasToken: !!token,
            tokenRole: token?.role
          })
        }
        
        // –ü—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã (–≤—Å–µ–≥–¥–∞ –¥–æ—Å—Ç—É–ø–Ω—ã)
        const publicRoutes = [
          '/',
          '/intro',
          '/product',
          '/cart',
          '/auth',
          '/admin-login',
          '/contacts',      // üî• –í–∞–∂–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          '/delivery',      // üî• SEO —Å—Ç—Ä–∞–Ω–∏—Ü—ã
          '/payment',       // üî• –î–æ–ª–∂–Ω—ã –±—ã—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã
          '/returns',       // üî• –í—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
          '/terms',         // üî• –ë–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
          '/privacy',       // üî• 
          '/offer',         // üî• 
          '/catalog',       // üî• –ö–∞—Ç–∞–ª–æ–≥ –µ—Å–ª–∏ –µ—Å—Ç—å
          '/api/auth',
          '/api/products',
          '/api/categories',
          '/api/placeholder',
          '/api/search',
          '/api/reviews',
          '/api/upload'
          // üîß –£–î–ê–õ–ï–ù /api/uploads - –æ–Ω –Ω–µ –Ω—É–∂–µ–Ω, nginx –æ–±—Å–ª—É–∂–∏–≤–∞–µ—Ç /uploads/ –Ω–∞–ø—Ä—è–º—É—é
        ]

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É–±–ª–∏—á–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã
        if (publicRoutes.some(route => pathname.startsWith(route))) {
          return true
        }

        // –ê–¥–º–∏–Ω—Å–∫–∏–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç —Ä–æ–ª—å ADMIN
        if (pathname.startsWith('/admin')) {
          const isAuthorized = token?.role === 'ADMIN'
          console.log('üîç Admin route authorization:', {
            path: pathname,
            isAuthorized,
            tokenRole: token?.role
          })
          return isAuthorized
        }

        // –ü—Ä–æ—Ñ–∏–ª—å–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (pathname.startsWith('/profile')) {
          console.log('üîç Authorized callback –ø—Ä–æ—Ñ–∏–ª—å:', {
            path: pathname,
            hasToken: !!token,
            tokenSub: token?.sub,
            authorized: !!token
          })
          return !!token
        }

        // Checkout —Ç—Ä–µ–±—É–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (pathname.startsWith('/checkout')) {
          console.log('üîç Authorized callback checkout:', {
            path: pathname,
            hasToken: !!token,
            tokenSub: token?.sub,
            authorized: !!token
          })
          return !!token
        }

        // API –º–∞—Ä—à—Ä—É—Ç—ã –∫–æ—Ä–∑–∏–Ω—ã –∏ –∑–∞–∫–∞–∑–æ–≤ —Ç—Ä–µ–±—É—é—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        if (pathname.startsWith('/api/cart') || pathname.startsWith('/api/orders')) {
          return !!token
        }

        // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é —Ä–∞–∑—Ä–µ—à–∞–µ–º –¥–æ—Å—Ç—É–ø
        return true
      },
    },
  }
)

export const config = {
  matcher: [
    /*
     * Match all request paths except for the ones starting with:
     * - _next/static (static files)
     * - _next/image (image optimization files)
     * - favicon.ico (favicon file)
     * - robots.txt, llms.txt (—Ç–µ–ø–µ—Ä—å –≤ public/, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω—ã)
     * - sitemap.xml (–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
     * - public folder files
     */
    '/((?!_next/static|_next/image|favicon.ico|.*\\.(?:svg|png|jpg|jpeg|gif|webp)$).*)',
  ],
} 